{"ast":null,"code":"// Defining the counterReducer function to handle state changes based on actions\nexport const counterReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'INCREMENT':// Incrementing the state by 1\nreturn state+1;case'DECREMENT':// Decrementing the state by 1\nreturn state-1;default:// Returning the current state if action type is not recognized\nreturn state;}};","map":{"version":3,"names":["counterReducer","state","arguments","length","undefined","action","type"],"sources":["/Users/hectoraltamira/redux-counter/my-react-redux-app/src/redux/reducer.js"],"sourcesContent":["// Defining the counterReducer function to handle state changes based on actions\nexport const counterReducer = (state = 0, action) => {\n    switch (action.type) {\n        case 'INCREMENT':\n            // Incrementing the state by 1\n            return state + 1;\n        case 'DECREMENT':\n            // Decrementing the state by 1\n            return state - 1;\n        default:\n            // Returning the current state if action type is not recognized\n            return state;\n    }\n};"],"mappings":"AAAA;AACA,MAAO,MAAM,CAAAA,cAAc,CAAG,QAAAA,CAAA,CAAuB,IAAtB,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,IAAE,CAAAG,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAC5C,OAAQC,MAAM,CAACC,IAAI,EACf,IAAK,WAAW,CACZ;AACA,MAAO,CAAAL,KAAK,CAAG,CAAC,CACpB,IAAK,WAAW,CACZ;AACA,MAAO,CAAAA,KAAK,CAAG,CAAC,CACpB,QACI;AACA,MAAO,CAAAA,KAAK,CACpB,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}